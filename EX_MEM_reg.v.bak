`timescale 1ns / 1ps
module EX_MEM_reg(
    input wire clk,
    input wire rst,
    input wire [7:0] in_alu_result,
    input wire [4:0] in_dest,
    input wire [7:0] in_imm,
    input wire [7:0] in_mem_data,
    input wire in_reg_write,
    input wire in_mem_write,
    output reg [7:0] out_alu_result,
    output reg [4:0] out_dest,
    output reg [7:0] out_imm,
    output reg [7:0] out_mem_data,
    output reg out_reg_write,
    output reg out_mem_write
);
    always @(posedge clk or negedge rst) begin
        if (!rst) begin
            out_alu_result <= 8'd0;
            out_dest       <= 5'd0;
            out_imm        <= 8'd0;
            out_mem_data   <= 8'd0;
            out_reg_write  <= 1'b0;
            out_mem_write  <= 1'b0;
        end else begin
            out_alu_result <= in_alu_result;
            out_dest       <= in_dest;
            out_imm        <= in_imm;
            out_mem_data   <= in_mem_data;
            out_reg_write  <= in_reg_write;
            out_mem_write  <= in_mem_write;
        end
    end
endmodule